#rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=root
spring.rabbitmq.password=1234

#交换器名称
mq.config.exchange=log.direct

#log队列名称
mq.config.queue.log=log
#log队列路由键
mq.config.queue.log.routing.key=log.routing.key



### 心得：
# 由于RabbitMQ的ack消息确认机制（默认开启）的存在，就导致了-->
# 当消息消费方由于某些原因造成消息消费失败，RabbitMQ接收不到消费成功的反馈时，RabbitMQ就会认为该消息没有被正常消费，会将消息重新放到队列中，
# 当Consumer退出时，Message会一直重新分发，RabbitMQ会占用越来越多内存，由于RabbitMQ会长时间运行，因此这个“内存泄漏”是致命的。

# 解决
# 方式一：在Consumer方，对消息消费业务添加trycatch异常捕获处理；
# 方式二：在Consumer方，设定重试次数。

#开启重试
spring.rabbitmq.listener.simple.retry.enabled=true
#重试次数（默认3次）
spring.rabbitmq.listener.simple.retry.max-attempts=5

